cov_xy = rho * varX * varY)
varX <- cv_sig2_Ts*rho*10
varX <- cv_sig2_Ts*rhos*10
cv_sig2_Ts
rhos
varX <- condition$cv_sig2_Ts*condition$rhos*10
varX <- conditions$cv_sig2_Ts*conditions$rhos*10
varY <- varX + (conditions$cv_sig2_Es*(10 - varX))
varX
varY
varX
conditions$cv_sig2_Es
(10 - varX)
conditions$cv_sig2_Es
conditions$cv_sig2_Es*(10 - varX)
varX + (conditions$cv_sig2_Es*(10 - varX))
varX <- conditions$cv_sig2_Ts*conditions$rhos*10
varY <- varX + (conditions$cv_sig2_Es*(10 - varX))
vars_ratios_true <- var_ratio(var_x = varX,
var_y = varY,
mu_x = conditions$rhos*10,
mu_y = 10,
cov_xy = conditions$rhos * varX * varY)
plot(vars_ratios, sim_df$sd_rxx^2)
plot(vars_ratios_true, sim_df$sd_rxx^2)
vars_ratios_true
varX
conditions$rhos * varX * varY
conditions$rhos*10
varX
varX <- conditions$cv_sig2_Ts*conditions$rhos*10^2
varY <- varX + (conditions$cv_sig2_Es*(10 - varX))^2
vars_ratios_true <- var_ratio(var_x = varX,
var_y = varY,
mu_x = conditions$rhos*10,
mu_y = 10,
cov_xy = conditions$rhos * varX * varY)
plot(vars_ratios_true, sim_df$sd_rxx^2)
varX
(conditions$cv_sig2_Es*(10 - varX))
varX <- conditions$cv_sig2_Ts*conditions$rhos*10
varY <- varX + (conditions$cv_sig2_Es*(10 - varX))
varX <- conditions$cv_sig2_Ts*conditions$rhos*10
varX
varY
varX <- conditions$cv_sig2_Ts*conditions$rhos*10^2
varY <- varX + (conditions$cv_sig2_Es*(10 - conditions$rhos*10))^2
vars_ratios_true <- var_ratio(var_x = varX,
var_y = varY,
mu_x = conditions$rhos*10,
mu_y = 10,
cov_xy = conditions$rhos * varX * varY)
plot(vars_ratios_true, sim_df$sd_rxx^2)
varX <- (conditions$cv_sig2_Ts*conditions$rhos*10)^2
varY <- varX + (conditions$cv_sig2_Es*(10 - conditions$rhos*10))^2
vars_ratios_true <- var_ratio(var_x = varX,
var_y = varY,
mu_x = conditions$rhos*10,
mu_y = 10,
cov_xy = conditions$rhos * varX * varY)
plot(vars_ratios_true, sim_df$sd_rxx^2)
vars_ratios_true
conditions$rhos * varX * varY
sqrt(conditions$rhos * varX * varY)
plot(sqrt(conditions$rhos * varX * varY))
varX <- (conditions$cv_sig2_Ts*conditions$rhos*10)^2
varY <- varX + (conditions$cv_sig2_Es*(10 - conditions$rhos*10))^2
vars_ratios_true <- var_ratio(var_x = varX,
var_y = varY,
mu_x = conditions$rhos*10,
mu_y = 10,
cov_xy = sqrt(conditions$rhos * varX * varY))
plot(vars_ratios_true, sim_df$sd_rxx^2)
sim_df$sd_rxx^2 - vars_ratiors_true
bias_true <- sim_df$sd_rxx^2 - vars_ratios_true
mean(bias_true)
MSE_true <- mean((sim_df$sd_rxx^2 - vars_ratios_true)^2)
MSE_true
sqrt(MSE_true)
knitr::opts_chunk$set(echo = TRUE)
convert_z2r(0.1266)
library(tidyverse)
library(knitr)
library(readxl)
library(DT)
library(meta)
install.packages("meta")
library(tidyverse)
library(knitr)
library(readxl)
library(DT)
library(meta)
library(esc)
install.packages("esc")
install.packages("dmetar")
library(tidyverse)
library(knitr)
library(readxl)
library(DT)
library(meta)
library(esc)
library(metafor)
library(dmetar)
devtools::install_github("MathiasHarrer/dmetar")
library(tidyverse)
library(knitr)
library(readxl)
library(DT)
library(meta)
library(esc)
library(metafor)
library(dmetar)
# https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/pooling-es.html
excel_bestand = "overzicht gegevens.xlsx"
overzicht = read_excel(excel_bestand, sheet = 1)
datatable(overzicht)
kable(tribble(~subject, ~school_type, ~group,	~beta,	~se,
"math",	"primary eduction",	"c",	0.187,	0.07,
"reading",	"primary eduction",	"c", 0.098,	0.055
), digits = 3)
kable(tribble(~subject, ~school_type, ~group,	~beta,	~se,
"math",	"secondary eduction",	"b",	0.011,	0.074,
"reading",	"secondary eduction",	"b", -0.047,	0.062
), digits = 4)
library(metafor)
data <- read.csv("C:/Users/beinhaul/Downloads/SexDifferences Data/ReplicationProcessedfinaldata04202018.csv")
grep("Ideal", names(data))
names(data)
grep("ideal", names(data))
!is.na(rowMeans(data[,grep("ideal", names(data))
)
!is.na(rowMeans(data[,grep("ideal", names(data))]))
data_noMissings <- data[which(!is.na(data$mate_age) & !is.na(rowMeans(data[,grep("ideal", names(data))]))),]
names(data)
data$sex
library(tidyverse)
data_noMissings %>%
group_by(CIN, sex) %>%
summarize(mate_age)
data_noMissings %>%
group_by(CIN, sex) %>%
summarize(m_ma = mean(mate_age))
data_noMissings %>%
group_by(CIN, sex) %>%
summarize(m_ma = mean(mate_age),
sd_ma = mean(mate_age))
names(data)
data_noMissings %>%
group_by(CIN, sex) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources)
)
data_noMissings %>%
group_by(CIN, sex) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = nrow(mate_age)
)
aggregates <- data_noMissings %>%
group_by(CIN, sex) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = nrow(mate_age)
)
aggregates
aggregates1 <- data_noMissings[which(data$sex == 1)] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = nrow(mate_age)
)
aggregates1 <- data_noMissings[which(data$sex == 1),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = nrow(mate_age)
)
aggregates1
aggregates0 <- data_noMissings[which(data$sex == 0),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = nrow(mate_age)
)
aggregates0 <- data_noMissings[which(data$sex == 0),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = nrow(mate_age)
)
aggregates0
aggregates1 <- data_noMissings[which(data$sex == 1),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = nrow(mate_age)
)
aggregates1 <- data_noMissings[which(data$sex == 1),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = length(mate_age)
)
aggregates0 <- data_noMissings[which(data$sex == 0),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = length(mate_age)
)
aggregates0
ES_ma <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ma, sd1i = aggregates1$sd_ma,
m2i = aggregates0$m_ma, sd2i = aggregates0$sd_ma,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ma
aggregates1
tail(aggregates1)
data <- read.csv("C:/Users/beinhaul/Downloads/SexDifferences Data/ReplicationProcessedfinaldata04202018.csv")
data_noMissings <- data[which(!is.na(data$mate_age) & !is.na(rowMeans(data[,grep("ideal", names(data))]))),]
aggregates1 <- data_noMissings[which(data_noMissings$sex == 1),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = length(mate_age)
)
aggregates0 <- data_noMissings[which(data_noMissings$sex == 0),] %>%
group_by(CIN) %>%
summarize(m_ma = mean(mate_age),
sd_ma = sd(mate_age),
m_ii = mean(ideal_intelligence),
sd_ii = sd(ideal_intelligence),
m_ik = mean(ideal_kindness),
sd_ik = sd(ideal_kindness),
m_ih = mean(ideal_health),
sd_ih = sd(ideal_health),
m_ip = mean(ideal_physatt),
sd_ip = mean(ideal_physatt),
m_ir = mean(ideal_resources),
sd_ir = mean(ideal_resources),
n = length(mate_age)
)
ES_ma <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ma, sd1i = aggregates1$sd_ma,
m2i = aggregates0$m_ma, sd2i = aggregates0$sd_ma,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ma
names(data)
ES_ma <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ma, sd1i = aggregates1$sd_ma,
m2i = aggregates0$m_ma, sd2i = aggregates0$sd_ma,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ii <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ii, sd1i = aggregates1$sd_ii,
m2i = aggregates0$m_ii, sd2i = aggregates0$sd_ii,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ik <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ik, sd1i = aggregates1$sd_ik,
m2i = aggregates0$m_ik, sd2i = aggregates0$sd_ik,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ih <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ih, sd1i = aggregates1$sd_ih,
m2i = aggregates0$m_ih, sd2i = aggregates0$sd_ih,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ip <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ip, sd1i = aggregates1$sd_ip,
m2i = aggregates0$m_ip, sd2i = aggregates0$sd_ip,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ir <- metafor::escalc(measure = "SMD", m1i = aggregates1$m_ir, sd1i = aggregates1$sd_ir,
m2i = aggregates0$m_ir, sd2i = aggregates0$sd_ir,
n1i = aggregates1$n, n2i = aggregates0$n)
ES_ma
ES_ii
ES_ik
Aggregates_ES <- data.frame(d_mate_age = ES_ma$yi, SE_mate_age = ES_ma$vi,
d_ideal_intelligence = ES_ii$yi, SE_ideal_intelligence = ES_ii$vi,
d_ideal_kindness = ES_ik$yi, SE_ideal_kindness = ES_ik$vi,
d_ideal_health = ES_ih$yi, SE_ideal_health = ES_ih$vi,
d_ideal_physatt = ES_ip$yi, SE_ideal_physatt = ES_ip$vi,
d_ideal_resources = ES_ir$yi, SE_ideal_resources = ES_ir$vi)
Aggregates_ES
write.csv(Aggregates_ES, "C:/Users/beinhaul/Documents/SHK_Wichmann/Aggregated_data_ES.csv",
row.names = FALSE)
test <- read.csv("C:/Users/beinhaul/Documents/SHK_Wichmann/Aggregated_data_ES.csv")
test
x <- rnorm(1000, mean = 10, sd = 2)
hist(x)
hist(x^2)
hist(x^3)
hist(log(x^3))
hist(x^2)
hist(log(x^2))
view(Aggregates_ES)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(readxl)
library(DT)
library(meta)
library(esc)
library(metafor)
library(dmetar)
# https://bookdown.org/MathiasHarrer/Doing_Meta_Analysis_in_R/pooling-es.html
excel_bestand = "overzicht gegevens.xlsx"
overzicht = read_excel(excel_bestand, sheet = 1)
datatable(overzicht)
kable(tribble(~subject, ~school_type, ~group,	~beta,	~se,
"math",	"primary eduction",	"c",	0.187,	0.07,
"reading",	"primary eduction",	"c", 0.098,	0.055
), digits = 3)
dif =8.84
es = 0.18
n_t = 1621
n_c = 1229
pooled_sd = dif/es
se = pooled_sd/sqrt(n_t+n_c)
se
kable(overzicht %>%
group_by(subject) %>%
count())
regulier = read_excel(excel_bestand, sheet = 2)
datT = regulier %>%
select(starts_with("treatment"), study_id)
datC = regulier %>%
select(starts_with("control"), study_id)
datT <- metafor::escalc(measure="SMD", m2i=treatment_m_pre , m1i=treatment_m_post,
sd2i = treatment_sd_pre, sd1i = treatment_sd_post,
n2i = treatment_n_pre, n1i =  treatment_n_post,
slab = study_id,
data=datT)
datC <- escalc(measure="SMD", m2i=control_m_pre , m1i=control_m_post,
sd2i = control_sd_pre, sd1i = control_sd_post,
n2i = control_n_pre, n1i =  control_n_post,
slab = study_id,
data=datC)
dat <- tibble(study_id = datT$study_id,
te = datT$yi - datC$yi,
se = datT$vi + datC$vi)
results1 = dat %>%
mutate(source = "1")
regresssie = read_excel(excel_bestand, sheet = 3)
results2 = regresssie %>%
select(study_id, te = beta, se)%>%
mutate(source = "2")
ander1 = read_excel(excel_bestand, sheet = 4)
SP_calc <- esc::esc_mean_sd(grp1m = ander1$treatment_m_post,
grp1sd = ander1$treatment_sd_post,
grp1n = ander1$treatment_n_post,
grp2m = ander1$control_m_post,
grp2sd = ander1$control_sd_post,
grp2n = ander1$control_n_post,
study = ander1$study_id,
es.type = "d") %>%
as.data.frame()
results3 = SP_calc %>%
select(study_id= study, te = es, se)%>%
mutate(source = "3")
ander2 = read_excel(excel_bestand, sheet = 5)
results4 = ander2 %>%
select(study_id, te = es, se) %>%
mutate(source = "4")
results = bind_rows(results1, results2, results3, results4)
results = results |>
results = results %>%
inner_join(overzicht) %>%
arrange(id)
kable(results[,c("id", "auteurs", "te", "se", "subject", "school_type", "group")], digits = 2, caption = "effect sizes")
full.model <- metafor::rma.mv(yi = te, # The name of the column in our data set which contains the calculated effect sizes.
V = se^2, # The name of the column in our data set which contains the variance of the calculated effect sizes. In our case, this is var.z. It is also possible to use the squared standard error of the effect size
slab = auteurs,
data = results,
random = ~ 1 | auteurs/id,
test = "t",
method = "REML") # The most important argument, however, is random. For a three-level model, the formula always starts with ~ 1, followed by a vertical bar |. Behind the vertical bar, we assign a random effect to a grouping variable (such as studies, measures, regions, etc.). This grouping variable is often called a random intercept because it tells our model to assume different effects (i.e. intercepts) for each group
summary(full.model)
convert_z2r(0.1266)
df = metafor::escalc(yi = te,        # Effect size
sei = se,       # Standard error
data = results)
foo = aggregate(df,
cluster = auteurs,
rho = 0.6)
m.gen =  meta::metagen(TE = te,
seTE = se,
studlab = auteurs,
data = foo,
sm = "SMD",
fixed = F,
random = T,
method.tau = "REML",
hakn = TRUE,
title = "Random effects")
forest.meta(m.gen,
sortvar = TE,
predict = F,
print.tau2 = FALSE,
fontsize = 8,
leftlabs = c("Author"))
forest.meta(m.gen,
sortvar = TE,
predict = FALSE,
print.tau2 = FALSE,
fontsize = 8,
leftlabs = c("Author"))
forest.meta(m.gen,
sortvar = TE,
predict = F,
print.tau2 = FALSE,
fontsize = 8,
leftlabs = c("Author"))
